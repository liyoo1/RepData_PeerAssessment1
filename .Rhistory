showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,.3,col=rgb(0,.5,.5))
plot(x,y,pch=19,alpha=.3,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
library(swirl)
ls()
rm(list=ls())
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(mdist[,10:12])
mdist<=dist(sub1[,10:12])
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,paste(10:12,maxCon)]
)
mdist<-dist(sub1[,paste0(10:12,maxCon)])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<=kmeans(sub1[,-c(562:563)],centers==6)
kClust<-kmeans(sub1[,-c(562:563)],centers==6)
kClust<-kmeans(sub1[,-c(562:563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-table(kClust$cluster,sub1$activity,nstart=100)
kClust<-kmeans(sub1[,-c(562:563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch-18,ylab="Laying Cluster")
plot(kClust$centers[laying,1:12],pch=18,ylab="Laying Cluster")
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(x, is.na(x0))
mean(x0, is.na(x0))
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates,"%Y%m%d"))
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.Code==36,county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1,State.Code==36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site))
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
?abline
abline(median(x0sub,na.rm=TRUE),b=0,lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state-names(mn0),mean=mn0)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52)),mrg[,2],xlim=c(.5,2.5))
with(mrg,plot(rep(1,52)),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3])
0
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(2,52),mrg[,2],rep(2,52),mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
library(ggplot2)
?qplot
setwd("~/Dropbox/Research project 2015/COAD coding & raw data")
?na.strings
?read.delim
source('~/Dropbox/Research project 2015/COAD coding & raw data/summarizeBLCAmutation.R')
str(coad_mutation)
source('~/Dropbox/Research project 2015/COAD coding & raw data/summarizeCOADmutation.R')
head(coad_mutation)
source('~/Dropbox/Research project 2015/COAD coding & raw data/summarizeCOADmutationbcmsolid.R')
setwd("~/Dropbox/datasciencecoursera/Reproducible Research")
?read.table
?read.csv
?colClasses
?strptime
activitydata<-read.csv("activity.csv",header=TRUE)
strptime(x[,2], format= "%m/%d/%y")
strptime(activitydata[,2], format= "%m/%d/%y")
str(activitydata)
head(activitydata)
?sum
rowsum(activitydata,date, reorder=FALSE)
rowsum(activitydata,activitydata$date, reorder=FALSE)
as.numeric(activitydata$steps)
rowsum(activitydata,activitydata$date, reorder=FALSE)
colsum(activitydata,activitydata$date, reorder=FALSE)
colSum(activitydata,activitydata$date, reorder=FALSE)
colSums(activitydata,activitydata$date, reorder=FALSE)
colSums(activitydata,activitydata$date)
aggregate(activitydata$steps, by=list(Category=activitydata$date), FUN=sum)
activitydata<-read.csv("activity.csv",header=TRUE)
strptime(activitydata[,2], format= "%m/%d/%y")
aggregate(activitydata$steps, by=list(Category=activitydata$date), FUN=sum)
tapply(activitydata$steps, activitydata$date, FUN=sum)
activitydata2<-by(activitydata$steps, activitydata$date, sum)
do.call(rbind,as.list(activitydata2))
library(plyr)
ddply(activitydata,.(date), summarise, sum=sum(steps))
ddply(activitydata,.(date), summarise, total steps=sum(steps))
ddply(activitydata,.(date), summarise, total_steps=sum(steps))
totalsteps<-ddply(activitydata,.(date), summarise, total_steps=sum(steps))
hist(totalsteps$total_steps, breaks="date",xlab=date, ylab="total steps")
hist(totalsteps$total_steps, xlab=date, ylab="total steps")
hist(totalsteps$date, xlab=date, ylab="total steps")
hist(totalsteps$total_steps, xlab="Date", ylab="total steps", col="green")
hist(totalsteps$total_steps, breaks=61, main="Total number of steps",xlab="Date", ylab="total steps", col="green")
hist(totalsteps$date, main="Total number of steps",xlab="Date", ylab="total steps", col="green")
?plot
?hist
hist(totalsteps$total_steps, main="Total steps per day", xlab="total steps in a day", ylab="frequency", col="green")
?mean
mean(totalsteps$total_steps)
mean(totalsteps$total_steps, na.rm=TRUE)
median(totalsteps$total_steps, na.rm=TRUE)
intervals<-ddply(activitydata,.(interval), summarise, average_steps=mean(steps))
intervals
?ddply
?complete.cases
activitydatacomp<-complete.cases(activitydata)
str(activitydatacomp)
activitydatacomp<-na.omit(activitydata)
str(activitydatacomp)
tail(activitydatacomp)
head(activitydatacomp)
str(activitydata)
intervals<-ddply(activitydatacomp,.(interval), summarise, average_steps=mean(steps))
intervals
with(activitydatacomp[,c(1,3)], plot(interval, average_steps, type="l",ylab="Average number of steps",xlab="Time interval",col="purple"))
with(intervals[,c(1,3)], plot(interval, average_steps, type="l",ylab="Average number of steps",xlab="Time interval",col="purple"))
with(intervals, plot(interval, average_steps, type="l",ylab="Average number of steps",xlab="Time interval",col="purple"))
?max
max(intervals)
pmax(intervals)
intervals[which(intervals$average_steps== max(intervals$average)),]
sum(!complete.cases(activitydata))
activitydata$steps[is.na(activitydata$steps)]=mean(activitydata[date=date, ], na.rm=TRUE)
activitydata$steps[is.na(activitydata$steps)]=mean(activitydata[date==date, ], na.rm=TRUE)
activitydata$steps[which(is.na(activitydata$steps))]<-intervals[which(intervals$interval== activitydata$interval),2], na.rm=TRUE)
activitydata$steps[which(is.na(activitydata$steps))]<-intervals[which(intervals$interval== activitydata$interval),2])
activitydata$steps[which(is.na(activitydata$steps))]<-intervals[which(intervals$interval== activitydata$interval),2]
?sample
impute.mean<-function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
activitydataimput<-ddply(activitydata, ~ interval, transform, steps = impute.mean(steps))
head(activitydataimput)
head(activitydata)
?head
head(activitydataimput, n=75)
which(is.na(activitydata))
activitydata[2017:2050,]
?order
activitydataimput[order(activitydataimput$date,activitydataimput$interval)]
activitydataimput[order(activitydataimput$date,activitydataimput$interval),]
activitydataimputord<-activitydataimput[order(activitydataimput$date,activitydataimput$interval),]
head(activitydataimputord)
head(activitydata)
activitydataimputord[230:300,]
activitydata[230:300,]
?ddply
?replace
head(intervals)
?ddply
str(activitydataimputord)
str(activitydata)
totalstepsimput<-ddply(activitydataimputord,.(date), summarise, total_steps=sum(steps))
totalstepsimput
totalsteps
hist(totalstepsimput$total_steps, main="Total steps taken each day", xlab="Total steps", ylab="frequency", col="green")
hist(totalsteps$total_steps, main="Total steps taken each day", xlab="Total steps", ylab="frequency", col="green")
mean(totalsteps$total_steps, na.rm=TRUE)
median(totalsteps$total_steps, na.rm=TRUE)
mean(totalstepsimput$total_steps, na.rm=TRUE)
median(totalstepsimput$total_steps, na.rm=TRUE)
?weekdays
weekdayclassif<-weekdays(activitydataimputord)
weekdayclassif<-weekdays(activitydataimputord$date)
str(activitydataimputord)
as.POSIXct(activitydataimputord$date)
activitydataposix<-as.POSIXct(activitydataimputord$date)
weekdayclassif<-weekdays(activitydataposix$date)
head(activitydataposix)
?replace
dateposix<-as.POSIXct(activitydataimputord$date)
weekdayclassif<-replace(activitydataimputord,activitydataimputord$date,dateposix)
str(dateposix)
str(activitydataimputord)
weekdayclassif<-replace(activitydataimputord$date,dateposix)
weekdayclassif<-replace(activitydataimputord$date,activitydataimputord$date,dateposix)
head(weekdayclassif)
head(activitydataimputord)
str(activitydataposix)
head(activitydataposix)
head(dateposix)
?weekend
?weekdays
weekdays(dateposix)
weekdaylabel<-weekdays(dateposix)
?replace
weekday2level<-replace(weekdaylabel,c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), "weekday")
head(weekday2level)
tail(weekday2level)
head(weekdaylabel)
tal(weekdaylabel)
tail(weekdaylabel)
str(weekdaylabel)
weekdaylabel== "Monday" <- "weekday"
weekday[weekdaylabel== "Monday"] <- "weekday"
weekdaylabel[weekdaylabel== "Monday"] <- "weekday"
head(weekdaylabel)
weekdaylabel[weekdaylabel== c("Monday","Tuesday","Wednesday","Thursday","Friday")]<-"weekday"
tail(weekdaylabel)
weekdaylabel<-weekdays(dateposix)
weekdaylabel[weekdaylabel== "Monday"] <- "weekday"
weekdaylabel[weekdaylabel== "Tuesday"] <- "weekday"
weekdaylabel[weekdaylabel== "Wednesday"] <- "weekday"
weekdaylabel[weekdaylabel== "Thursday"] <- "weekday"
weekdaylabel[weekdaylabel== "Friday"] <- "weekday"
weekdaylabel[weekdaylabel== "Saturday"] <- "weekend"
weekdaylabel[weekdaylabel== "Sunday"] <- "weekend"
weekdaylabel[1:100]
weekdaylabel[500:600]
str(weekdaylabel)
weekdaylabel[800:1000]
tail(weekdaylabel)
weekdaylabel[12000:12100]
activitydataimputord$weekday<-weekdaylabel
str(activitydataimputord)
tail(activitydataimputord)
?as.factor
factorweekdaylabel<-factor(weekdaylabel)
str(factorweekdaylabel)
activitydataimputord$weekday<-factor(activitydataimputord$weekday)
str(activitydataimputord)
?par
str(totalstempsimput)
str(totalstepsimput)
str(activitydataimputord)
str(intervals)
str(activitydata)
?ddply
?split
intervals2<-ddply(activitydataimputord,.(interval,weekday), summarise, averae_steps=mean(steps))
head(intervals2)
intervals2
intervals2<-ddply(activitydataimputord,.(weekday, interval), summarise, average_steps=mean(steps))
intervals2
intervals2<-ddply(activitydataimputord,.(weekday, interval), summarise, average_steps=mean(steps))
intervalsweekday<-intervals[weekday=weekday,]
intervalsweekday<-intervals[weekday="weekday,]
""
"
intervalsweekday<-intervals[weekday="weekday",]
intervalsweekday<-intervals[weekday=="weekday",]
intervalsweekday<-intervals[intervals$weekday==weekday,]
intervalsweekday<-intervals[intervals$weekday=="weekday",]
intervalsweekday
intervalsweekday<-intervals[1:288,]
intervalsweekday
intervalsweekend<-intervals[289:576,]
intervalsweekend
intervalsweekday<-intervals2[1:288,]
intervalsweekday
intervalsweekend<-intervals2[289:576,]
intervalsweekend
with(intervalsweekend, {
plot(interval,average_steps,type="l",ylab="Number of steps",xlab="Interval")}
intervalsweekday, {
plot(interval,average_steps,type="l",ylab="Number of steps",xlab="Interval")
}
?plot
?layout
par(mfcol=c(2,1))
?with
with(intervalsweekend, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")}intervalsweekday, {plot(interval, average_steps, type="l", ylab="number of steps",xlab="Interval")})
with(intervalsweekend, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
with(intervalsweekday, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
matrix(1:2)
?plot
?par
par(oma=c(0,0,0,0))
par(oma=c(.5,.5,.5,.5))
par(mfcol=c(2,1))
par(cex=0.6)
par(cex.lab=0.6)
par(col="blue")
par(oma=c(0,0,0,0))
with(intervalsweekend, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
with(intervalsweekday, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))
par(cex=0.6)
par(cex.lab=0.6)
par(col="blue")
par(oma=c(0,0,0,0))
with(intervalsweekday, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
with(intervalsweekend, {plot(interval, average_steps, type="l",ylab="number of steps",xlab="Interval")})
?axis
?plot
par(mfcol=c(2,1))
par(cex=0.6)
par(cex.lab=0.6)
par(col="blue")
par(mar=c(0,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps")})
par(mar=c(5,4,0,2))
par(mfcol=c(2,1))
par(cex=0.6)
par(cex.lab=0.6)
par(col="blue")
par(mar=c(0,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps")})
axis(1, tick=FALSE)
par(mar=c(5,4,0,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.5,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt=n)})
par(xaxt=n)
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(5,4,0.5,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.5,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt=n)})
par(mar=c(5,4,0.5,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.5,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n"")})
par(mar=c(5,4,0.5,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.5,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n"")})
""
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.5,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(5,4,0.5,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.6,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(5,4,0.6,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,1,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(5,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,1,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(5,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,1,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(1,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,1.5,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(1.5,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,2,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="number of steps",xaxt="n")})
par(mar=c(2,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,2.5,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="Number of steps",xaxt="n")})
par(mar=c(2.5,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="Number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,3,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="Number of steps",xaxt="n")})
par(mar=c(3,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="Number of steps",xlab="Interval")})
par(mfcol=c(2,1))  #creates matrix of 2 graphs, one over the other
par(cex=0.7)
par(cex.lab=0.7)
par(col="blue")
par(mar=c(0.7,4,4,2))
with(intervalsweekend, {plot(interval, average_steps, type="l",main="weekend",ylab="Number of steps",xaxt="n")})
par(mar=c(4,4,0.7,2))
with(intervalsweekday, {plot(interval, average_steps, type="l",main="weekday",ylab="Number of steps",xlab="Interval")})
activitydata<-strptime(activitydata[,2], format="%m/%d/%y")
head(activitydata)
str(activitydata)
head(activitydata)
activitydata<-read.csv("activity.csv",header=TRUE)
head(activitydata)
setwd("~/Dropbox/datasciencecoursera/Reproducible Research/RepData_PeerAssessment1")
